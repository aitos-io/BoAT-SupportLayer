# Compiler
HOST_PLATFORM = win32
ROOT_DIR := D:/AITOS_BoAT/projetcs-penghao/P230904-JD-YIYUANG-fengxishun/doc/JD/EC800/ql-sdk
COMPILE_TOOL_PATH := $(ROOT_DIR)/ql-cross-tool/$(HOST_PLATFORM)/owtoolchain
GCC_INSTALL_PATH = $(COMPILE_TOOL_PATH)/gcc-arm-none-eabi

CC := $(GCC_INSTALL_PATH)/bin/arm-none-eabi-gcc.exe
AR := $(GCC_INSTALL_PATH)/bin/arm-none-eabi-ar.exe

# Commands
CYGWIN_PATH = D:\cygwin64\bin
BOAT_RM := $(CYGWIN_PATH)/rm -rf
BOAT_MKDIR := $(CYGWIN_PATH)\mkdir
BOAT_FIND := $(CYGWIN_PATH)\find
BOAT_COPY := $(CYGWIN_PATH)/cp

#LD_LIBRARY_PATH := $(LD_LIBRARY_PATH):$(CURDIR)/../../../build/usr/lib

# External include path and libraries


EXTERNAL_INC :=  -I$(ROOT_DIR)/ql-application\threadx\interface\log\inc \
				 -I$(ROOT_DIR)/ql-application\threadx\common\include \
				 
#-------------------------------------------------------------------------------
# Flag that indicate don't compile functions those built in GCC
#-------------------------------------------------------------------------------
FNO_BUILTIN_FLAGS := -fno-builtin-printf \
					   -fno-builtin-time \
					   -fno-builtin-gmtime \
					   -fno-builtin-gettimeofday \
					   -fno-builtin-mktime \
					   -fno-builtin-puts

EXTERNAL_CFLAGS :=  -MMD -mlong-calls  -mcpu=cortex-r4 -mfloat-abi=soft   \
					-mlittle-endian -mthumb -mthumb-interwork  -Wall -ffunction-sections -fdata-sections \
					$(FNO_BUILTIN_FLAGS) \
					-DPLAT_USE_THREADX \
					-D__OCPU_COMPILER_GCC__ -D_WANT_USE_LONG_TIME_T -std=c99 -g -Os


EXTERNAL_LIBS   := 

export CC
export AR
export BOAT_RM
export BOAT_MKDIR
export BOAT_FIND
export BOAT_COPY
#export LD_LIBRARY_PATH
export EXTERNAL_INC
export EXTERNAL_CFLAGS
export EXTERNAL_LIBS
